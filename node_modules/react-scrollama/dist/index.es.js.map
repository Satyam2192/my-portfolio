{"version":3,"file":"index.es.js","sources":["../src/utils.js","../src/DebugOffset.js","../src/Scrollama.js","../node_modules/react-intersection-observer/react-intersection-observer.modern.mjs","../src/Step.js"],"sourcesContent":["export const isOffsetInPixels = offset => typeof offset === 'string' && offset.includes('px');\n","import React from 'react';\nimport { isOffsetInPixels } from './utils';\n\nconst markerStyles = {\n  position: 'fixed',\n  left: 0,\n  width: '100%',\n  height: 0,\n  borderTop: '2px dashed black',\n  zIndex: 9999,\n};\nconst offsetTextStyles = {\n  fontSize: '12px',\n  fontFamily: 'monospace',\n  margin: 0,\n  padding: 6,\n};\n\nconst useTop = offset => {\n  const offsetInPixels = isOffsetInPixels(offset);\n  if(offsetInPixels) {\n    return offset;\n  } else {\n    return `${offset * 100}%`\n  }\n}\n\nconst DebugOffset = ({ offset }) => {\n  const top = useTop(offset);\n  return (\n    <div style={{ ...markerStyles, top, }}>\n      <p style={offsetTextStyles}>trigger: {offset}</p>\n    </div>\n  );\n}\n\nexport default DebugOffset;\n","import React, { useMemo, useState } from 'react';\nimport DebugOffset from './DebugOffset';\nimport { isOffsetInPixels } from './utils';\n\nconst createThreshold = (theta, height) => {\n  const count = Math.ceil(height / theta);\n  const t = [];\n  const ratio = 1 / count;\n  for (let i = 0; i <= count; i += 1) {\n    t.push(i * ratio);\n  }\n  return t;\n};\n\nconst Scrollama = props => {\n  const {\n    debug,\n    children,\n    offset,\n    onStepEnter,\n    onStepExit,\n    onStepProgress,\n    threshold,\n  } = props;\n  const isOffsetDefinedInPixels = isOffsetInPixels(offset)\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [windowInnerHeight, setWindowInnerHeight] = useState(null);\n\n  const handleSetLastScrollTop = (scrollTop) => {\n    setLastScrollTop(scrollTop);\n  };\n\n  const handleWindowResize = (e) => {\n    setWindowInnerHeight(window.innerHeight)\n  }\n\n  React.useEffect(() => {\n    if(isOffsetDefinedInPixels) {\n      window.addEventListener('resize', handleWindowResize);\n      return () => {\n        window.removeEventListener('resize', handleWindowResize);\n      };\n    }\n  }, []);\n\n  const isBrowser = typeof window !== \"undefined\";\n  const innerHeight = isBrowser ? (windowInnerHeight || window.innerHeight) : 0;\n\n  const offsetValue = isOffsetDefinedInPixels\n    ? (+offset.replace('px', '') / innerHeight)\n    : offset;\n\n  const progressThreshold = useMemo(() => createThreshold(threshold, innerHeight), [innerHeight]);\n\n  return (\n    <React.Fragment>\n      {debug && <DebugOffset offset={offset} />}\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          scrollamaId: `react-scrollama-${i}`,\n          offset: offsetValue,\n          onStepEnter,\n          onStepExit,\n          onStepProgress,\n          lastScrollTop,\n          handleSetLastScrollTop,\n          progressThreshold,\n          innerHeight\n        });\n      })}\n    </React.Fragment>\n  );\n};\n\nScrollama.defaultProps = {\n  onStepProgress: null,\n  onStepEnter: () => {},\n  onStepExit: () => {},\n  threshold: 4,\n  offset: 0.3,\n};\n\nexport default Scrollama;\n","import * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst observerMap = new Map();\nconst RootIds = new WeakMap();\nlet rootId = 0;\nlet unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(key => options[key] !== undefined).map(key => {\n    return `${key}_${key === 'root' ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map();\n    let thresholds;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView = entry.isIntersecting && thresholds.some(threshold => entry.intersectionRatio >= threshold); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(callback => {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options); // Register the callback listener for this element\n\n  let callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\nconst _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nclass InView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.node = null;\n    this._unobserveCb = null;\n\n    this.handleNode = node => {\n      if (this.node) {\n        // Clear the old observer, before we start observing a new element\n        this.unobserve();\n\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          this.setState({\n            inView: !!this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      this.node = node ? node : null;\n      this.observeNode();\n    };\n\n    this.handleChange = (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        this.unobserve();\n      }\n\n      if (!isPlainChildren(this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        this.setState({\n          inView,\n          entry\n        });\n      }\n\n      if (this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        this.props.onChange(inView, entry);\n      }\n    };\n\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  }\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const {\n        inView,\n        entry\n      } = this.state;\n      return this.props.children({\n        inView,\n        entry,\n        ref: this.handleNode\n      });\n    }\n\n    const _this$props = this.props,\n          {\n      children,\n      as\n    } = _this$props,\n          props = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return React.createElement(as || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  }\n\n}\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  const unobserve = React.useRef();\n  const callback = React.useRef();\n  const [state, setState] = React.useState({\n    inView: !!initialInView\n  }); // Store the onChange callback in a `ref`, so we can access the latest instance inside the `useCallback`.\n\n  callback.current = onChange;\n  const setRef = React.useCallback(node => {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, (inView, entry) => {\n        setState({\n          inView,\n          entry\n        });\n        if (callback.current) callback.current(inView, entry);\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root,\n        rootMargin,\n        threshold,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay\n      }, fallbackInView);\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  /* eslint-disable-next-line */\n\n  React.useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  const result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.modern.mjs.map\n","import React, { useState, useMemo, useCallback, useRef } from 'react';\nimport { useInView } from 'react-intersection-observer';\n\nconst useRootMargin = offset => {\n  return `-${offset * 100}% 0px -${100 - offset * 100}% 0px`;\n}\n\nconst useProgressRootMargin = (direction, offset, node, innerHeight) => {\n  if (!node.current) return '0px';\n  const offsetHeight = (node.current.offsetHeight / innerHeight);\n  if (direction === 'down') return `${(offsetHeight - offset) * 100}% 0px ${(offset * 100) - 100}% 0px`;\n  return `-${offset * 100}% 0px ${(offsetHeight * 100) - (100 - (offset * 100))}% 0px`;\n}\n\nconst Step = props => {\n  const {\n    children,\n    data,\n    handleSetLastScrollTop,\n    lastScrollTop,\n    onStepEnter,\n    onStepExit,\n    onStepProgress,\n    offset,\n    scrollamaId,\n    progressThreshold,\n    innerHeight,\n  } = props;\n\n  const isBrowser = typeof window !== \"undefined\";\n  const scrollTop = isBrowser ? document.documentElement.scrollTop : 0;\n  const direction = lastScrollTop < scrollTop ? 'down' : 'up';\n\n  const rootMargin = useRootMargin(offset);\n\n  const ref = useRef(null);\n  const [isIntersecting, setIsIntersecting] = useState(false);\n\n  const {ref: inViewRef, entry} = useInView({\n    rootMargin,\n    threshold: 0,\n  });\n\n  const progressRootMargin = useMemo(\n    () => useProgressRootMargin(direction, offset, ref, innerHeight),\n    [direction, offset, ref, innerHeight]\n  );\n\n  const {ref: scrollProgressRef, entry: scrollProgressEntry} = useInView({\n    rootMargin: progressRootMargin,\n    threshold: progressThreshold,\n  });\n\n  const setRefs = useCallback(\n    (node) => {\n      ref.current = node;\n      inViewRef(node);\n      scrollProgressRef(node)\n    },\n    [inViewRef, scrollProgressRef],\n  );\n\n\n  React.useEffect(() => {\n    if (isIntersecting) {\n      const { height, top } = scrollProgressEntry.target.getBoundingClientRect();\n      const progress = Math.min(1, Math.max(0, (window.innerHeight * offset - top) / height));\n      onStepProgress &&\n      onStepProgress({\n        progress,\n        scrollamaId,\n        data,\n        element: scrollProgressEntry.target,\n        entry: scrollProgressEntry,\n        direction,\n      });\n    }\n  }, [scrollProgressEntry]);\n\n  React.useEffect(() => {\n    if (entry && !entry.isIntersecting && isIntersecting) {\n      onStepExit({ element: entry.target, scrollamaId, data, entry, direction });\n      setIsIntersecting(false);\n      handleSetLastScrollTop(scrollTop)\n    } else if (entry && entry.isIntersecting && !isIntersecting) {\n      setIsIntersecting(true);\n      onStepEnter({ element: entry.target, scrollamaId, data, entry, direction});\n      handleSetLastScrollTop(scrollTop)\n    }\n  }, [entry]);\n\n  return React.cloneElement(React.Children.only(children), {\n    'data-react-scrollama-id': scrollamaId,\n    ref: setRefs,\n    entry,\n  });\n};\n\nStep.defaultProps = {\n  onStepProgress: null,\n  onStepEnter: () => {},\n  onStepExit: () => {},\n};\n\nexport default Step;\n"],"names":["isOffsetInPixels","offset","includes","markerStyles","position","left","width","height","borderTop","zIndex","offsetTextStyles","fontSize","fontFamily","margin","padding","useTop","offsetInPixels","DebugOffset","top","React","createThreshold","theta","count","Math","ceil","t","ratio","i","push","Scrollama","props","debug","children","onStepEnter","onStepExit","onStepProgress","threshold","isOffsetDefinedInPixels","useState","lastScrollTop","setLastScrollTop","windowInnerHeight","setWindowInnerHeight","handleSetLastScrollTop","scrollTop","handleWindowResize","e","window","innerHeight","useEffect","addEventListener","removeEventListener","isBrowser","offsetValue","replace","progressThreshold","useMemo","Children","map","child","cloneElement","scrollamaId","defaultProps","useRootMargin","useProgressRootMargin","direction","node","current","offsetHeight","Step","data","document","documentElement","rootMargin","ref","useRef","isIntersecting","setIsIntersecting","useInView","inViewRef","entry","progressRootMargin","scrollProgressRef","scrollProgressEntry","setRefs","useCallback","target","getBoundingClientRect","progress","min","max","element","only"],"mappings":"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"}